/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package consecionario.Formularios;

import BD.ConexionBD;
import java.awt.Color;
import java.awt.Desktop;
import java.awt.Font;
import java.io.File;
import javax.swing.table.DefaultTableModel;
import java.sql.Connection;
import javax.swing.JOptionPane;
import javax.swing.table.JTableHeader;

/**
 *
 * @author antoniosalinas
 */
public class Historial extends javax.swing.JPanel {

    /**
     * Creates new form Historial
     */
    private void cargarHistorial() { DefaultTableModel modelo = new DefaultTableModel() {
        @Override
        public boolean isCellEditable(int row, int column) {
            return false; // Ninguna celda será editable
        }
    };
    modelo.addColumn("ID");
    modelo.addColumn("Nombre Cliente");
    modelo.addColumn("Tipo Documento");
    modelo.addColumn("Fecha Registro");
    modelo.addColumn("PDF");
    

    Connection con = ConexionBD.conn();
    if (con != null) {
        try {
            String sql = "SELECT id, nombre_cliente, tipo_documento, fecha_registro, ruta_archivo FROM historial_documentos";
            java.sql.PreparedStatement ps = con.prepareStatement(sql);
            java.sql.ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                Object[] fila = new Object[5];
                fila[0] = rs.getInt("id");
                fila[1] = rs.getString("nombre_cliente");
                fila[2] = rs.getString("tipo_documento");
                fila[3] = rs.getTimestamp("fecha_registro");
                fila[4] = rs.getString("ruta_archivo");
                modelo.addRow(fila);
            }
            rs.close();
            ps.close();
            con.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al cargar historial: " + e.getMessage());
        }
    }

    tblHistorial.setModel(modelo);
}
    private void abrirPDF(String ruta) {
    try {
        File archivo = new File(ruta);
        if (archivo.exists()) {
            if (Desktop.isDesktopSupported()) {
                Desktop.getDesktop().open(archivo);
            } else {
                JOptionPane.showMessageDialog(this, "Desktop no soportado en este sistema.");
            }
        } else {
            JOptionPane.showMessageDialog(this, "El archivo no existe: " + ruta);
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error al abrir el archivo: " + e.getMessage());
    }
}
    
    public void PersonalizarTabla(){
        tblHistorial.setRowHeight(40); // Altura de cada fila
        tblHistorial.setGridColor(Color.decode("#00263A")); // Color de las líneas

// Cambiar fuente del contenido
tblHistorial.setFont(new Font("Segoe UI", Font.PLAIN, 14));

// Cambiar fondo y texto de la tabla
tblHistorial.setBackground(new Color(245, 245, 245));
tblHistorial.setForeground(Color.BLACK);

// Encabezados personalizados
JTableHeader header = tblHistorial.getTableHeader();
header.setFont(new Font("Segoe UI", Font.BOLD, 14));
header.setBackground(new Color(60, 63, 65));
header.setForeground(Color.WHITE);
    }
    public Historial() {
        initComponents();
        PersonalizarTabla();
        cargarHistorial();
        tblHistorial.addMouseListener(new java.awt.event.MouseAdapter() {
    public void mouseClicked(java.awt.event.MouseEvent evt) {
        if (evt.getClickCount() == 2) { // doble clic
            int fila = tblHistorial.getSelectedRow();
            if (fila != -1) {
                String rutaArchivo = tblHistorial.getValueAt(fila, 4).toString();
                abrirPDF(rutaArchivo);
            }
        }
    }
});
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bg = new javax.swing.JPanel();
        pnlTabla = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblHistorial = new javax.swing.JTable();
        lblHistorial = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new java.awt.BorderLayout());

        bg.setBackground(new java.awt.Color(255, 255, 255));
        bg.setLayout(new java.awt.BorderLayout());

        pnlTabla.setBackground(new java.awt.Color(255, 255, 255));

        tblHistorial.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblHistorial);

        javax.swing.GroupLayout pnlTablaLayout = new javax.swing.GroupLayout(pnlTabla);
        pnlTabla.setLayout(pnlTablaLayout);
        pnlTablaLayout.setHorizontalGroup(
            pnlTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1189, Short.MAX_VALUE)
            .addGroup(pnlTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlTablaLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1177, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        pnlTablaLayout.setVerticalGroup(
            pnlTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 736, Short.MAX_VALUE)
            .addGroup(pnlTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlTablaLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 618, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        bg.add(pnlTabla, java.awt.BorderLayout.CENTER);

        add(bg, java.awt.BorderLayout.CENTER);

        lblHistorial.setFont(new java.awt.Font("Roboto", 1, 24)); // NOI18N
        lblHistorial.setForeground(new java.awt.Color(0, 0, 0));
        lblHistorial.setText("Historial de ventas");
        add(lblHistorial, java.awt.BorderLayout.NORTH);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bg;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblHistorial;
    private javax.swing.JPanel pnlTabla;
    private javax.swing.JTable tblHistorial;
    // End of variables declaration//GEN-END:variables
}
